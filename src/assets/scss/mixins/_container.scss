/**
 * -kbs-add-component-padding
 * @param important: boolsche Variable, die steuert, ob das Padding mit !important ausgezeichnet werden soll
 * Das Mixin sorgt dafuer, dass eine Komponente das Component-Padding bekommt, welches laut settings je nach Breakpoint
 * unterschiedlich sein kann. Kann von eingerueckten Componenten verwendet werden.
 **/
@mixin -kbs-add-component-padding($important: false) {
  @each $size, $component-padding in $-kbs-component-paddings {
    @include breakpoint($size) {
      padding-left: $component-padding;
      padding-right: $component-padding;

      //> .module-headline {
      //  //margin-left: (- $module-padding + rem-calc($module-padding)) if($important, #{'!important'}, #{''});
      //  padding-left: ($module-padding + rem-calc($module-padding)) if($important, #{'!important'}, #{''});
      //}
    }
  }
}


/**
 * -kbs-add-component-container-padding
 * @param reducedVerticalPadding: boolsche Variable, die steuert, ob fuer das vertikale Padding nur die Haelfte des
 *                                Paddings genommen werden soll. default : true
 * @param important: boolsche Variable, die steuert, ob das Padding mit !important ausgezeichnet werden soll
 * Das Mixin sorgt dafuer, dass ein Container das Component-Padding bekommt, welches laut settings je nach Breakpoint
 * unterschiedlich sein kann.
 **/
@mixin -kbs-add-component-container-padding($reducedVerticalPadding: true, $important: false) {
  @each $size, $component-container-padding in $-kbs-component-container-paddings {
    @include breakpoint($size) {
      @if $reducedVerticalPadding {
        padding: ($component-container-padding / 2) $component-container-padding if($important, #{'!important'}, #{''});
      }
      @else {
        padding: $component-container-padding if($important, #{'!important'}, #{''});
      }
    }
  }
}

/**
 * -kbs-add-module-padding
 * Das Mixin sorgt dafuer, dass ein Modul das Modul-Padding bekommt, welches laut settings je nach Breakpoint
 * unterschiedlich sein kann. Kann von eingerueckten Modulen verwendet werden.
 **/
@mixin -kbs-add-module-padding($horizontal-padding: 0, $vertical-padding: 0) {

  @each $size, $module-padding in $-kbs-module-paddings {
    @include breakpoint($size) {

      @if map-has-key($module-padding, horizontal) {
        $horizontal-padding: map-get($module-padding, horizontal);
      }

      @if map-has-key($module-padding, vertical) {
        $vertical-padding: map-get($module-padding, vertical);
      }

      padding: $vertical-padding $horizontal-padding;

    }
  }
}




/**
 * -kbs-add-module-container-padding
 * @param reducedVerticalPadding: boolsche Variable, die steuert, ob fuer das vertikale Padding nur die Haelfte des
 *                                Paddings genommen werden soll. default : true
 * @param important: boolsche Variable, die steuert, ob das Padding mit !important ausgezeichnet werden soll
 * Das Mixin sorgt dafuer, dass ein Container das Modul-Padding bekommt, welches laut settings je nach Breakpoint
 * unterschiedlich sein kann.
 **/
@mixin -kbs-add-module-container-padding($reducedVerticalPadding: true, $important: false) {
  @each $size, $module-container-padding in $-kbs-module-container-paddings {
    @include breakpoint($size) {
      @if $reducedVerticalPadding {
        padding: ($module-container-padding / 2) $module-container-padding if($important, #{'!important'}, #{''});
      }
      @else {
        padding: $module-container-padding if($important, #{'!important'}, #{''});
      }
    }
  }
}

